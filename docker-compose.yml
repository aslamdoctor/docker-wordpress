version: '3.3'

networks:
  # enable connection with Traefik
  traefik:
    external: true
  # network for the app
  backend:

services:
  db:
    image: mysql:5.7
    platform: linux/x86_64
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - backend

  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    container_name: ${PMA_CONTRAINER_NAME}
    links:
      - db
    environment:
      PMA_HOST: db
      PMA_PORT: ${DB_PORT}
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - ${PMA_PORT}:80
    networks:
      - backend

  wordpress:
    depends_on:
      - db
    image: wordpress:6.0.1-php7.4-apache
    # ports:
    #   - '${WP_PORT}:80'
    expose:
      - ${WP_PORT}
    volumes:
      - './wordpress:/var/www/html'
      - './config/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini'
    restart: always
    environment:
      WORDPRESS_DB_HOST: db:${DB_PORT}
      WORDPRESS_DB_USER: ${MYSQL_DATABASE}
      WORDPRESS_DB_PASSWORD: ${MYSQL_USER}
      WORDPRESS_DB_NAME: ${MYSQL_PASSWORD}
    networks:
      - traefik
      - backend
    labels:
      # The labels are usefull for Traefik only
      - 'traefik.enable=true'
      - 'traefik.docker.network=traefik'
      # Get the routes from http
      - 'traefik.http.routers.$TRAEFIK_ROUTE.rule=Host(`${SITE_URL}`)'
      - 'traefik.http.routers.$TRAEFIK_ROUTE.entrypoints=web'

  wp-cli:
    image: wordpress:cli-2.6.0-php7.4
    depends_on:
      - wordpress
      - db
    environment:
      WORDPRESS_DB_HOST: db:${DB_PORT}
      WORDPRESS_DB_USER: ${MYSQL_DATABASE}
      WORDPRESS_DB_PASSWORD: ${MYSQL_USER}
      WORDPRESS_DB_NAME: ${MYSQL_PASSWORD}
    working_dir: /var/www/html
    volumes:
      - './wordpress:/var/www/html'
    networks:
      - backend
volumes:
  db_data: {}
